// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mycqrs.proto

package protocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestResponse_StatusEnum int32

const (
	RequestResponse_OK    RequestResponse_StatusEnum = 0
	RequestResponse_ERROR RequestResponse_StatusEnum = 1
)

var RequestResponse_StatusEnum_name = map[int32]string{
	0: "OK",
	1: "ERROR",
}

var RequestResponse_StatusEnum_value = map[string]int32{
	"OK":    0,
	"ERROR": 1,
}

func (x RequestResponse_StatusEnum) String() string {
	return proto.EnumName(RequestResponse_StatusEnum_name, int32(x))
}

func (RequestResponse_StatusEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9cac780285d56342, []int{1, 0}
}

type Contact struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LastUpdated          *timestamp.Timestamp `protobuf:"bytes,5,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Contact) Reset()         { *m = Contact{} }
func (m *Contact) String() string { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()    {}
func (*Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cac780285d56342, []int{0}
}

func (m *Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contact.Unmarshal(m, b)
}
func (m *Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contact.Marshal(b, m, deterministic)
}
func (m *Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contact.Merge(m, src)
}
func (m *Contact) XXX_Size() int {
	return xxx_messageInfo_Contact.Size(m)
}
func (m *Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_Contact proto.InternalMessageInfo

func (m *Contact) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Contact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Contact) GetLastUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.LastUpdated
	}
	return nil
}

type RequestResponse struct {
	Status               RequestResponse_StatusEnum `protobuf:"varint,1,opt,name=status,proto3,enum=protocol.RequestResponse_StatusEnum" json:"status,omitempty"`
	Message              string                     `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *RequestResponse) Reset()         { *m = RequestResponse{} }
func (m *RequestResponse) String() string { return proto.CompactTextString(m) }
func (*RequestResponse) ProtoMessage()    {}
func (*RequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cac780285d56342, []int{1}
}

func (m *RequestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestResponse.Unmarshal(m, b)
}
func (m *RequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestResponse.Marshal(b, m, deterministic)
}
func (m *RequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestResponse.Merge(m, src)
}
func (m *RequestResponse) XXX_Size() int {
	return xxx_messageInfo_RequestResponse.Size(m)
}
func (m *RequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RequestResponse proto.InternalMessageInfo

func (m *RequestResponse) GetStatus() RequestResponse_StatusEnum {
	if m != nil {
		return m.Status
	}
	return RequestResponse_OK
}

func (m *RequestResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ContactRequestResponse struct {
	Response             *RequestResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Contact              *Contact         `protobuf:"bytes,2,opt,name=contact,proto3" json:"contact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ContactRequestResponse) Reset()         { *m = ContactRequestResponse{} }
func (m *ContactRequestResponse) String() string { return proto.CompactTextString(m) }
func (*ContactRequestResponse) ProtoMessage()    {}
func (*ContactRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cac780285d56342, []int{2}
}

func (m *ContactRequestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactRequestResponse.Unmarshal(m, b)
}
func (m *ContactRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactRequestResponse.Marshal(b, m, deterministic)
}
func (m *ContactRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequestResponse.Merge(m, src)
}
func (m *ContactRequestResponse) XXX_Size() int {
	return xxx_messageInfo_ContactRequestResponse.Size(m)
}
func (m *ContactRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequestResponse proto.InternalMessageInfo

func (m *ContactRequestResponse) GetResponse() *RequestResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *ContactRequestResponse) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

type ContactArrayRequestResponse struct {
	Response             *RequestResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Contact              []*Contact       `protobuf:"bytes,2,rep,name=contact,proto3" json:"contact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ContactArrayRequestResponse) Reset()         { *m = ContactArrayRequestResponse{} }
func (m *ContactArrayRequestResponse) String() string { return proto.CompactTextString(m) }
func (*ContactArrayRequestResponse) ProtoMessage()    {}
func (*ContactArrayRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cac780285d56342, []int{3}
}

func (m *ContactArrayRequestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactArrayRequestResponse.Unmarshal(m, b)
}
func (m *ContactArrayRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactArrayRequestResponse.Marshal(b, m, deterministic)
}
func (m *ContactArrayRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactArrayRequestResponse.Merge(m, src)
}
func (m *ContactArrayRequestResponse) XXX_Size() int {
	return xxx_messageInfo_ContactArrayRequestResponse.Size(m)
}
func (m *ContactArrayRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactArrayRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContactArrayRequestResponse proto.InternalMessageInfo

func (m *ContactArrayRequestResponse) GetResponse() *RequestResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *ContactArrayRequestResponse) GetContact() []*Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

type ContactReference struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactReference) Reset()         { *m = ContactReference{} }
func (m *ContactReference) String() string { return proto.CompactTextString(m) }
func (*ContactReference) ProtoMessage()    {}
func (*ContactReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cac780285d56342, []int{4}
}

func (m *ContactReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactReference.Unmarshal(m, b)
}
func (m *ContactReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactReference.Marshal(b, m, deterministic)
}
func (m *ContactReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactReference.Merge(m, src)
}
func (m *ContactReference) XXX_Size() int {
	return xxx_messageInfo_ContactReference.Size(m)
}
func (m *ContactReference) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactReference.DiscardUnknown(m)
}

var xxx_messageInfo_ContactReference proto.InternalMessageInfo

func (m *ContactReference) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListContactsFilter struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListContactsFilter) Reset()         { *m = ListContactsFilter{} }
func (m *ListContactsFilter) String() string { return proto.CompactTextString(m) }
func (*ListContactsFilter) ProtoMessage()    {}
func (*ListContactsFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cac780285d56342, []int{5}
}

func (m *ListContactsFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListContactsFilter.Unmarshal(m, b)
}
func (m *ListContactsFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListContactsFilter.Marshal(b, m, deterministic)
}
func (m *ListContactsFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListContactsFilter.Merge(m, src)
}
func (m *ListContactsFilter) XXX_Size() int {
	return xxx_messageInfo_ListContactsFilter.Size(m)
}
func (m *ListContactsFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListContactsFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ListContactsFilter proto.InternalMessageInfo

func (m *ListContactsFilter) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ContactArray struct {
	Contacts             []*Contact `protobuf:"bytes,1,rep,name=contacts,proto3" json:"contacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ContactArray) Reset()         { *m = ContactArray{} }
func (m *ContactArray) String() string { return proto.CompactTextString(m) }
func (*ContactArray) ProtoMessage()    {}
func (*ContactArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cac780285d56342, []int{6}
}

func (m *ContactArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactArray.Unmarshal(m, b)
}
func (m *ContactArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactArray.Marshal(b, m, deterministic)
}
func (m *ContactArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactArray.Merge(m, src)
}
func (m *ContactArray) XXX_Size() int {
	return xxx_messageInfo_ContactArray.Size(m)
}
func (m *ContactArray) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactArray.DiscardUnknown(m)
}

var xxx_messageInfo_ContactArray proto.InternalMessageInfo

func (m *ContactArray) GetContacts() []*Contact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

type ContactReferenceArray struct {
	Contacts             []*ContactReference `protobuf:"bytes,1,rep,name=contacts,proto3" json:"contacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ContactReferenceArray) Reset()         { *m = ContactReferenceArray{} }
func (m *ContactReferenceArray) String() string { return proto.CompactTextString(m) }
func (*ContactReferenceArray) ProtoMessage()    {}
func (*ContactReferenceArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cac780285d56342, []int{7}
}

func (m *ContactReferenceArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactReferenceArray.Unmarshal(m, b)
}
func (m *ContactReferenceArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactReferenceArray.Marshal(b, m, deterministic)
}
func (m *ContactReferenceArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactReferenceArray.Merge(m, src)
}
func (m *ContactReferenceArray) XXX_Size() int {
	return xxx_messageInfo_ContactReferenceArray.Size(m)
}
func (m *ContactReferenceArray) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactReferenceArray.DiscardUnknown(m)
}

var xxx_messageInfo_ContactReferenceArray proto.InternalMessageInfo

func (m *ContactReferenceArray) GetContacts() []*ContactReference {
	if m != nil {
		return m.Contacts
	}
	return nil
}

type ReverseContactNameResponse struct {
	Response             *RequestResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Contact              *Contact         `protobuf:"bytes,2,opt,name=contact,proto3" json:"contact,omitempty"`
	ReversedName         string           `protobuf:"bytes,3,opt,name=reversedName,proto3" json:"reversedName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReverseContactNameResponse) Reset()         { *m = ReverseContactNameResponse{} }
func (m *ReverseContactNameResponse) String() string { return proto.CompactTextString(m) }
func (*ReverseContactNameResponse) ProtoMessage()    {}
func (*ReverseContactNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cac780285d56342, []int{8}
}

func (m *ReverseContactNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReverseContactNameResponse.Unmarshal(m, b)
}
func (m *ReverseContactNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReverseContactNameResponse.Marshal(b, m, deterministic)
}
func (m *ReverseContactNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReverseContactNameResponse.Merge(m, src)
}
func (m *ReverseContactNameResponse) XXX_Size() int {
	return xxx_messageInfo_ReverseContactNameResponse.Size(m)
}
func (m *ReverseContactNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReverseContactNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReverseContactNameResponse proto.InternalMessageInfo

func (m *ReverseContactNameResponse) GetResponse() *RequestResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *ReverseContactNameResponse) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *ReverseContactNameResponse) GetReversedName() string {
	if m != nil {
		return m.ReversedName
	}
	return ""
}

func init() {
	proto.RegisterEnum("protocol.RequestResponse_StatusEnum", RequestResponse_StatusEnum_name, RequestResponse_StatusEnum_value)
	proto.RegisterType((*Contact)(nil), "protocol.Contact")
	proto.RegisterType((*RequestResponse)(nil), "protocol.RequestResponse")
	proto.RegisterType((*ContactRequestResponse)(nil), "protocol.ContactRequestResponse")
	proto.RegisterType((*ContactArrayRequestResponse)(nil), "protocol.ContactArrayRequestResponse")
	proto.RegisterType((*ContactReference)(nil), "protocol.ContactReference")
	proto.RegisterType((*ListContactsFilter)(nil), "protocol.ListContactsFilter")
	proto.RegisterType((*ContactArray)(nil), "protocol.ContactArray")
	proto.RegisterType((*ContactReferenceArray)(nil), "protocol.ContactReferenceArray")
	proto.RegisterType((*ReverseContactNameResponse)(nil), "protocol.ReverseContactNameResponse")
}

func init() { proto.RegisterFile("mycqrs.proto", fileDescriptor_9cac780285d56342) }

var fileDescriptor_9cac780285d56342 = []byte{
	// 548 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x94, 0x5d, 0x8b, 0xd3, 0x4c,
	0x14, 0xc7, 0x9b, 0xee, 0xd3, 0x97, 0x3d, 0x7d, 0x79, 0xea, 0xa0, 0x25, 0x46, 0xa1, 0xcb, 0xa0,
	0x20, 0x8a, 0x59, 0x88, 0xe8, 0xd5, 0x8a, 0xac, 0xba, 0xbe, 0xe0, 0xba, 0x85, 0xd1, 0xc5, 0x1b,
	0x41, 0xb2, 0xc9, 0xd9, 0x12, 0xc8, 0x4b, 0x77, 0x66, 0x22, 0x2c, 0x78, 0xe3, 0xad, 0x97, 0x7e,
	0x06, 0x3f, 0x9e, 0x1f, 0xc2, 0x74, 0x92, 0x34, 0x6d, 0xb2, 0xe9, 0x8a, 0xa0, 0x57, 0x9d, 0xcc,
	0xfc, 0xcf, 0xff, 0xfc, 0xe6, 0xcc, 0x39, 0x85, 0x7e, 0x70, 0xee, 0x9c, 0x71, 0x61, 0xce, 0x79,
	0x24, 0x23, 0xd2, 0x55, 0x3f, 0x4e, 0xe4, 0x1b, 0x93, 0x59, 0x14, 0xcd, 0x7c, 0xdc, 0x55, 0x1b,
	0x27, 0xf1, 0xe9, 0xae, 0xf4, 0x02, 0x14, 0xd2, 0x0e, 0xe6, 0xa9, 0x94, 0xfa, 0xd0, 0x79, 0x16,
	0x85, 0xd2, 0x76, 0x24, 0x19, 0x42, 0xd3, 0x73, 0x75, 0x6d, 0x47, 0xbb, 0xb3, 0xcd, 0x92, 0x15,
	0x21, 0xf0, 0x5f, 0x68, 0x07, 0xa8, 0x37, 0xd5, 0x8e, 0x5a, 0x93, 0xc7, 0xd0, 0xf7, 0x6d, 0x21,
	0x3f, 0xc5, 0x73, 0xd7, 0x96, 0xe8, 0xea, 0xad, 0xe4, 0xac, 0x67, 0x19, 0x66, 0x9a, 0xc6, 0xcc,
	0xd3, 0x98, 0xef, 0xf3, 0x34, 0xac, 0xb7, 0xd0, 0x1f, 0xa7, 0x72, 0xfa, 0x4d, 0x83, 0xff, 0x19,
	0x9e, 0xc5, 0xc9, 0x19, 0x43, 0x31, 0x8f, 0x42, 0x81, 0x64, 0x0f, 0xda, 0x89, 0x52, 0xc6, 0x42,
	0xa5, 0x1e, 0x5a, 0xb7, 0xcc, 0x9c, 0xde, 0x2c, 0x49, 0xcd, 0x77, 0x4a, 0x77, 0x10, 0xc6, 0x01,
	0xcb, 0x62, 0x88, 0x0e, 0x9d, 0xb7, 0x28, 0x84, 0x3d, 0xcb, 0x39, 0xf3, 0x4f, 0x3a, 0x01, 0x28,
	0xf4, 0xa4, 0x0d, 0xcd, 0xe9, 0x9b, 0x51, 0x83, 0x6c, 0x43, 0xeb, 0x80, 0xb1, 0x29, 0x1b, 0x69,
	0xf4, 0x0b, 0x8c, 0xb3, 0xab, 0x97, 0x91, 0x1e, 0x42, 0x97, 0x67, 0x6b, 0x05, 0xd5, 0xb3, 0xae,
	0xd7, 0x42, 0xb1, 0xa5, 0x94, 0xdc, 0x83, 0x8e, 0x93, 0x1a, 0x2a, 0x96, 0x9e, 0x75, 0xa5, 0x88,
	0xca, 0x33, 0xe5, 0x0a, 0xfa, 0x55, 0x83, 0x1b, 0xd9, 0xe6, 0x3e, 0xe7, 0xf6, 0xf9, 0xdf, 0x60,
	0xd8, 0xba, 0x84, 0x81, 0xc2, 0x68, 0x59, 0x81, 0x53, 0xe4, 0x18, 0x3a, 0x58, 0xee, 0x02, 0x7a,
	0x17, 0xc8, 0xa1, 0x27, 0x64, 0xa6, 0x13, 0x2f, 0x3c, 0x5f, 0x22, 0x27, 0x57, 0xa1, 0xe5, 0x44,
	0x71, 0x28, 0x95, 0xb0, 0xc5, 0xd2, 0x0f, 0x9a, 0x74, 0xc7, 0xea, 0x95, 0xc8, 0x7d, 0xe8, 0x66,
	0xa9, 0x16, 0x8f, 0x5b, 0x43, 0xb3, 0x94, 0xd0, 0x29, 0x5c, 0x2b, 0xe3, 0xa4, 0x3e, 0x8f, 0x2a,
	0x3e, 0x46, 0xd5, 0x27, 0x0f, 0x59, 0x31, 0xfc, 0xa1, 0x81, 0xc1, 0xf0, 0x33, 0x72, 0x81, 0x99,
	0xea, 0x28, 0x69, 0xe2, 0x7f, 0xf9, 0xcc, 0x84, 0x42, 0x9f, 0xa7, 0x04, 0xee, 0x22, 0xb7, 0xbe,
	0xa5, 0x0a, 0xbb, 0xb6, 0x67, 0xfd, 0x6c, 0xc2, 0x20, 0x0b, 0xfc, 0xc0, 0xbd, 0x45, 0x79, 0xf7,
	0x00, 0xf6, 0x5d, 0x37, 0x1f, 0xcc, 0xaa, 0xbf, 0x51, 0x0f, 0x4a, 0x1b, 0xe4, 0x09, 0x0c, 0xd2,
	0x81, 0xfb, 0x53, 0x83, 0x57, 0x30, 0x78, 0x8e, 0x3e, 0x16, 0x06, 0x1b, 0xca, 0xbd, 0xd9, 0xe9,
	0x29, 0xf4, 0x8a, 0x8b, 0x08, 0x32, 0xae, 0xf8, 0xa8, 0x07, 0xde, 0xec, 0x71, 0x04, 0xc3, 0x35,
	0x1a, 0x41, 0x26, 0xf5, 0x38, 0x97, 0xfb, 0x59, 0xdf, 0x8b, 0x72, 0x33, 0xb4, 0xdd, 0xa4, 0xdc,
	0x87, 0x00, 0x2f, 0x51, 0xfe, 0xce, 0x65, 0x77, 0x2e, 0x38, 0x2b, 0xf3, 0x1e, 0x43, 0x7f, 0x75,
	0x62, 0xc8, 0xcd, 0x22, 0xa6, 0x3a, 0x49, 0xc6, 0xed, 0x8b, 0x4b, 0x52, 0xb5, 0xfd, 0x08, 0xe3,
	0x02, 0xf2, 0x75, 0x98, 0xf4, 0x8f, 0x4c, 0xfb, 0x67, 0x23, 0xf0, 0xda, 0xbf, 0x69, 0xdd, 0x24,
	0xd0, 0xc6, 0x49, 0x5b, 0xc9, 0x1e, 0xfc, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xad, 0x52, 0xc6, 0xea,
	0x49, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ContactWriterClient is the client API for ContactWriter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContactWriterClient interface {
	AddContact(ctx context.Context, in *Contact, opts ...grpc.CallOption) (*RequestResponse, error)
	UpdateContact(ctx context.Context, in *Contact, opts ...grpc.CallOption) (*RequestResponse, error)
	DeleteContact(ctx context.Context, in *ContactReference, opts ...grpc.CallOption) (*RequestResponse, error)
	AddContacts(ctx context.Context, in *ContactArray, opts ...grpc.CallOption) (*RequestResponse, error)
	DeleteContacts(ctx context.Context, in *ContactReferenceArray, opts ...grpc.CallOption) (*RequestResponse, error)
}

type contactWriterClient struct {
	cc *grpc.ClientConn
}

func NewContactWriterClient(cc *grpc.ClientConn) ContactWriterClient {
	return &contactWriterClient{cc}
}

func (c *contactWriterClient) AddContact(ctx context.Context, in *Contact, opts ...grpc.CallOption) (*RequestResponse, error) {
	out := new(RequestResponse)
	err := c.cc.Invoke(ctx, "/protocol.ContactWriter/AddContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactWriterClient) UpdateContact(ctx context.Context, in *Contact, opts ...grpc.CallOption) (*RequestResponse, error) {
	out := new(RequestResponse)
	err := c.cc.Invoke(ctx, "/protocol.ContactWriter/UpdateContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactWriterClient) DeleteContact(ctx context.Context, in *ContactReference, opts ...grpc.CallOption) (*RequestResponse, error) {
	out := new(RequestResponse)
	err := c.cc.Invoke(ctx, "/protocol.ContactWriter/DeleteContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactWriterClient) AddContacts(ctx context.Context, in *ContactArray, opts ...grpc.CallOption) (*RequestResponse, error) {
	out := new(RequestResponse)
	err := c.cc.Invoke(ctx, "/protocol.ContactWriter/AddContacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactWriterClient) DeleteContacts(ctx context.Context, in *ContactReferenceArray, opts ...grpc.CallOption) (*RequestResponse, error) {
	out := new(RequestResponse)
	err := c.cc.Invoke(ctx, "/protocol.ContactWriter/DeleteContacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContactWriterServer is the server API for ContactWriter service.
type ContactWriterServer interface {
	AddContact(context.Context, *Contact) (*RequestResponse, error)
	UpdateContact(context.Context, *Contact) (*RequestResponse, error)
	DeleteContact(context.Context, *ContactReference) (*RequestResponse, error)
	AddContacts(context.Context, *ContactArray) (*RequestResponse, error)
	DeleteContacts(context.Context, *ContactReferenceArray) (*RequestResponse, error)
}

// UnimplementedContactWriterServer can be embedded to have forward compatible implementations.
type UnimplementedContactWriterServer struct {
}

func (*UnimplementedContactWriterServer) AddContact(ctx context.Context, req *Contact) (*RequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddContact not implemented")
}
func (*UnimplementedContactWriterServer) UpdateContact(ctx context.Context, req *Contact) (*RequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateContact not implemented")
}
func (*UnimplementedContactWriterServer) DeleteContact(ctx context.Context, req *ContactReference) (*RequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteContact not implemented")
}
func (*UnimplementedContactWriterServer) AddContacts(ctx context.Context, req *ContactArray) (*RequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddContacts not implemented")
}
func (*UnimplementedContactWriterServer) DeleteContacts(ctx context.Context, req *ContactReferenceArray) (*RequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteContacts not implemented")
}

func RegisterContactWriterServer(s *grpc.Server, srv ContactWriterServer) {
	s.RegisterService(&_ContactWriter_serviceDesc, srv)
}

func _ContactWriter_AddContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Contact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactWriterServer).AddContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ContactWriter/AddContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactWriterServer).AddContact(ctx, req.(*Contact))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactWriter_UpdateContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Contact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactWriterServer).UpdateContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ContactWriter/UpdateContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactWriterServer).UpdateContact(ctx, req.(*Contact))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactWriter_DeleteContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactReference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactWriterServer).DeleteContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ContactWriter/DeleteContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactWriterServer).DeleteContact(ctx, req.(*ContactReference))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactWriter_AddContacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactArray)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactWriterServer).AddContacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ContactWriter/AddContacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactWriterServer).AddContacts(ctx, req.(*ContactArray))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactWriter_DeleteContacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactReferenceArray)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactWriterServer).DeleteContacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ContactWriter/DeleteContacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactWriterServer).DeleteContacts(ctx, req.(*ContactReferenceArray))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContactWriter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.ContactWriter",
	HandlerType: (*ContactWriterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddContact",
			Handler:    _ContactWriter_AddContact_Handler,
		},
		{
			MethodName: "UpdateContact",
			Handler:    _ContactWriter_UpdateContact_Handler,
		},
		{
			MethodName: "DeleteContact",
			Handler:    _ContactWriter_DeleteContact_Handler,
		},
		{
			MethodName: "AddContacts",
			Handler:    _ContactWriter_AddContacts_Handler,
		},
		{
			MethodName: "DeleteContacts",
			Handler:    _ContactWriter_DeleteContacts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mycqrs.proto",
}

// ContactReaderClient is the client API for ContactReader service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContactReaderClient interface {
	GetContact(ctx context.Context, in *ContactReference, opts ...grpc.CallOption) (*ContactRequestResponse, error)
	ListContacts(ctx context.Context, in *ListContactsFilter, opts ...grpc.CallOption) (*ContactArrayRequestResponse, error)
	GetContactInvertedName(ctx context.Context, in *ContactReference, opts ...grpc.CallOption) (*ReverseContactNameResponse, error)
}

type contactReaderClient struct {
	cc *grpc.ClientConn
}

func NewContactReaderClient(cc *grpc.ClientConn) ContactReaderClient {
	return &contactReaderClient{cc}
}

func (c *contactReaderClient) GetContact(ctx context.Context, in *ContactReference, opts ...grpc.CallOption) (*ContactRequestResponse, error) {
	out := new(ContactRequestResponse)
	err := c.cc.Invoke(ctx, "/protocol.ContactReader/GetContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactReaderClient) ListContacts(ctx context.Context, in *ListContactsFilter, opts ...grpc.CallOption) (*ContactArrayRequestResponse, error) {
	out := new(ContactArrayRequestResponse)
	err := c.cc.Invoke(ctx, "/protocol.ContactReader/ListContacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactReaderClient) GetContactInvertedName(ctx context.Context, in *ContactReference, opts ...grpc.CallOption) (*ReverseContactNameResponse, error) {
	out := new(ReverseContactNameResponse)
	err := c.cc.Invoke(ctx, "/protocol.ContactReader/GetContactInvertedName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContactReaderServer is the server API for ContactReader service.
type ContactReaderServer interface {
	GetContact(context.Context, *ContactReference) (*ContactRequestResponse, error)
	ListContacts(context.Context, *ListContactsFilter) (*ContactArrayRequestResponse, error)
	GetContactInvertedName(context.Context, *ContactReference) (*ReverseContactNameResponse, error)
}

// UnimplementedContactReaderServer can be embedded to have forward compatible implementations.
type UnimplementedContactReaderServer struct {
}

func (*UnimplementedContactReaderServer) GetContact(ctx context.Context, req *ContactReference) (*ContactRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContact not implemented")
}
func (*UnimplementedContactReaderServer) ListContacts(ctx context.Context, req *ListContactsFilter) (*ContactArrayRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListContacts not implemented")
}
func (*UnimplementedContactReaderServer) GetContactInvertedName(ctx context.Context, req *ContactReference) (*ReverseContactNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContactInvertedName not implemented")
}

func RegisterContactReaderServer(s *grpc.Server, srv ContactReaderServer) {
	s.RegisterService(&_ContactReader_serviceDesc, srv)
}

func _ContactReader_GetContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactReference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactReaderServer).GetContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ContactReader/GetContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactReaderServer).GetContact(ctx, req.(*ContactReference))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactReader_ListContacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListContactsFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactReaderServer).ListContacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ContactReader/ListContacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactReaderServer).ListContacts(ctx, req.(*ListContactsFilter))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactReader_GetContactInvertedName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactReference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactReaderServer).GetContactInvertedName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ContactReader/GetContactInvertedName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactReaderServer).GetContactInvertedName(ctx, req.(*ContactReference))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContactReader_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.ContactReader",
	HandlerType: (*ContactReaderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetContact",
			Handler:    _ContactReader_GetContact_Handler,
		},
		{
			MethodName: "ListContacts",
			Handler:    _ContactReader_ListContacts_Handler,
		},
		{
			MethodName: "GetContactInvertedName",
			Handler:    _ContactReader_GetContactInvertedName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mycqrs.proto",
}
